plugins {
    id('com.manning.gia.commons')
    id('distribution')
}

//task sourcesJar(type: Jar) {
//    archiveBaseName = web_archive_base_name
//    classifier 'sources'
//    from sourceSets.main.allSource
//
//    println "sourcesJar archiveBaseName: "+archiveBaseName.get()
//}

sourcesJar{
    archiveBaseName = web_archive_base_name
}
javadocJar{
    archiveBaseName = web_archive_base_name
}
//task javadocJar(type: Jar, dependsOn: javadoc) {
//    archiveBaseName = web_archive_base_name
//    classifier 'javadoc'
//    from javadoc.destinationDir
//}


// id 'distribution'
distributions {
    main {
        distributionBaseName = web_archive_base_name
        contents {
            from{
                libsDirectory
            }
        }
    }
    /*
    sources {
        distributionBaseName = web_archive_base_name + "-sources"
        contents {
            from(libsDirectory) {
                include sourcesJar.archiveFileName.get()
            }
        }
    }
    docs {
        distributionBaseName = web_archive_base_name + "-docs"
        contents {
            from(libsDirectory) {
                include javadocJar.archiveFileName.get()
            }
        }
    }*/
}

distTar.dependsOn(war,sourcesJar,javadocJar)
distZip.dependsOn(war,sourcesJar,javadocJar)
/*
sourcesDistTar.dependsOn(war,sourcesJar)
sourcesDistZip.dependsOn(war,sourcesJar)

docsDistTar.dependsOn(war,javadocJar)
docsDistZip.dependsOn(war,javadocJar)*/